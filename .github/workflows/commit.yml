name: commit
on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - reopened
      - synchronize

permissions:
  contents: read

jobs:
  test:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24.0"

      - run: go mod verify

      - run: go test -v ./...

      - uses: golangci/golangci-lint-action@v8
        with:
          version: v2.1

  build:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: "1.24.0"

      - name: Set up QEMU for cross-compilation of Docker images
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - run: go mod download

      - uses: goreleaser/goreleaser-action@v6
        id: goreleaser
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --skip=publish --clean --snapshot
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker base on Goreleaser
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/${{ github.repository }}
          tags: |
            type=raw,value=${{ fromJSON(steps.goreleaser.outputs.metadata).version }}

      - name: Test build of Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          platforms: |
            linux/amd64
            linux/arm64
            linux/arm/v7
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            VERSION=${{ fromJSON(steps.goreleaser.outputs.metadata).version }}
            COMMIT=${{ fromJSON(steps.goreleaser.outputs.metadata).commit }}
            DATE=${{ fromJSON(steps.goreleaser.outputs.metadata).date }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
